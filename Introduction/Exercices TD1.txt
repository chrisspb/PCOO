EXERCICE 1.

on veut écrire un programme simulant des poupées russes de di#érentes tailles. Chaque
poupée a une taille donnée, peut s'ouvrir ou se fermer, peut contenir une autre poupée et être contenue
dans une autre poupée.
Écrivez une classe PoupeeRusse contenant les méthodes suivantes :
- un constructeur
- void ouvrir() : ouvre la poupée si elle n'est pas déjà ouverte et si elle ne se trouve pas à
l'intérieur d'une autre poupée
- void fermer() : ferme la poupée si elle n'est pas déjà fermée et si elle ne se trouve pas à
l'intérieur d'une autre poupée
- void placerDans(PoupeeRusse p) : place la poupée courante dans la poupée p si c'est
possible. Il faut que la poupée courante soit fermée et ne soit pas déjà dans une autre poupée,
que la poupée p soit ouverte et ne contienne aucune poupée, et que p soit d'une taille supérieure
à la poupée courante.
- void sortirDe(PoupeeRusse p) : sort la poupée courante de la poupée p si elle est dans p
et si p est ouverte.



EXERCICE 2.
on veut développer un logiciel pour générer des sujets d'examen. Un programmeur a
écrit la classe suivante avant de démissionner (il a gagné au loto). Vous devez continuer le
développement.
class Question{
 String enonce;
 int difficulte=50; // la difficulte varie de 0 à 100
 Question(String e){
 this.enonce = e;
 }
 void setDifficulte(int d){
 this.difficulte = d;
 }
 int getDifficulte(){
 return this.difficulte;
 }
 String getEnonce(){
 return this.enonce;
 }
}
On veut représenter les questions de QCM (Questionnaire à Choix Multiples). Chaque question
à choix multiple a, en plus d'un énoncé et d'une difficulté, un ensemble de réponses possibles, chaque
réponse ayant un énoncé et une valeur de vérité (une réponse peut être vraie ou fausse).
a. Proposez du code pour représenter les questions à choix multiples.
b. Un sujet d'examen est une liste de questions (de QCM ou autre) avec un barême. Chaque
question du sujet a donc un nombre de points. Sans modifier les classes que vous avez écrites avant,
écrivez du code objet pour représenter les sujets, avec en particulier une méthode qui permet d'obtenir
la difficulté moyenne du sujet. La difficulté moyenne est la somme des difficultés des questions du
sujet, divisée par le nombre de questions. 


EXERCICE 3.

Un collectionneur veut gérer la liste des véhicules qu’il possède. Il collectionne différents types de
véhicules : des autos, des motos et des camions. Pour chaque véhicule, il veut conserver sa marque,
son modèle et sa couleur (exemple Renault Clio rouge...). Il désire :

afficher la liste des noms des véhicules qu’il possède,
afficher tous les véhicules d’une couleur donnée
rechercher s’il possède ou non un véhicule d’une certaine marque et d’un certain modèle.
Vendre un véhicule

1) Proposer une solution orientée objet permettant de représenter tous les véhicules possibles.
Comment gérer le type du véhicule ? 

2) Implanter sous Eclipse en Java la solution à base d’héritage et tester tout d’abord les classes que vous avez imaginées en instanciant différents objets de votre choix (avec les constructeurs) pour chacune de celles-ci.

3) Le collectionneur ne connaît pas a priori le nombre de véhicules qu’il va posséder. Utilisez les
collections et notamment les ArrayList pour mettre des éléments (véhicules) dans cette liste et
pour l’afficher avec et sans itérateurs.

4) Créer une classe qui hérite de ArrayList pour pouvoir efficacement répondre aux questions b, c et d.


Exercice bonus (niveau ✈️)

On vous remet une pile de cartes d'embarquement pour différents transports qui vous mèneront d'un point A à un point B en passant par plusieurs arrêts en cours de route. Toutes les cartes d'embarquement sont en désordre et vous ne savez pas où commence et où finit votre voyage. Chaque carte d'embarquement contient des informations sur l'affectation des sièges et le moyen de transport (numéro de vol, numéro de bus, etc.).

Écrivez une API qui vous permette de trier ce type de liste et de renvoyer une description de la manière de terminer votre voyage.

Par exemple, l'API devrait être capable de prendre un ensemble non ordonné de cartes d'embarquement, fournies dans un format défini par vous, et de produire cette liste :

"	Prenez le train 78A de Madrid à Barcelone. Asseyez-vous à la place 45B.
"	Prenez le bus de l'aéroport de Barcelone à l'aéroport de Gérone. Pas d'attribution de siège.
"	De l'aéroport de Gérone, prenez le vol SK455 à destination de Stockholm. Porte 45B, siège 3A. Dépose des bagages au guichet 344.
"	De Stockholm, prenez le vol SK22 à destination de New York JFK. Porte 22, siège 7B. Les bagages seront automatiquement transférés de votre dernière étape.
"	Vous êtes arrivé à votre destination finale.

La liste doit être définie dans un format compatible avec le format d'entrée. 

